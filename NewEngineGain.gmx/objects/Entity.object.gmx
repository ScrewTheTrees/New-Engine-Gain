<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>entityID = getCreateEntityID();
entityRoom = room;             //The room this entity is residing inside

//Flags
flags = 0;

team = TEAM.teamNeutral;


//Logic
healthDecay = true;            //If this tag is set health will decay
healthDecayRate = 0.01;        //1% of extra health is decayed every 0.01 seconds.
healthDecayMax = 50;          //Maximum amount of health that can be lost every 0.01 seconds.
healthDecayMin = 1;          //Maximum amount of health that can be lost every 0.01 seconds.

iframes = 0;

//Properties
entityHealth = 10000;
entityMana = 10000;
entityStamina = 10000;

entityHealthMax = 10000;
entityManaMax = 10000;
entityStaminaMax = 10000;

entityHealthRegen = 1.00;
entityManaRegen = 1.00;
entityStaminaRegen = 1.00;

damageScaling = 1;
abilityScaling = 1;

//Input
for (var i = 0; i &lt;= INPUT.keyMax; i++)
{
    inputPressed[i] = false;
    inputHold[i] = false;
    inputHoldPrevious[i] = false; //To identify Hold/Release
    inputRelease[i] = false;
}
queueInput = 0; //To send input to other players

//Movement
xSpeed = 0;
ySpeed = 0;
yGravity = 0.5;

facedir = 1;

//Movement no sync
canWallJump = false;
canJump = true;

moveSpeed = 4;
xSpeedMax = 99;
ySpeedMax = 12

jumpSpeed = 12;
jumpSpeedWall = 6;
jumpSpeedWallUp = 8;

//Animation / Drawing
animationSprite = -1;
animationFrame = 0;
animationSpeed = 1;
animationLength = 0;
animationRepeat = false;
animationEndSprite = -1;
animationEndSpeed = 1;

animationIdle = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if queueInput == 1
{
    queueInput = 50;
}
if queueInput &gt; 0
    queueInput -= 1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (Entity_GetFlagState(self,ENTITYFLAG.flagInvisible==false))
    draw_sprite_ext(sprite_index,image_index,x,y,facedir,image_yscale,image_angle,image_blend,image_alpha);

draw_text(x-32,y-100,"EntityID: "+string(entityID));
draw_text(x-32,y-120,"Helath: "+string(entityHealth));
draw_text(x-32,y-140,"Mana: "+string(entityMana));
draw_text(x-32,y-160,"Stamina: "+string(entityStamina));
draw_text(x-32,y-180,"Team: "+string(team));
draw_text(x-32,y-200,"Flags: "+string(flags));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
